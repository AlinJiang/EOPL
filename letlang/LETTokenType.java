package letlang;

public enum LETTokenType {
    EOF_TYPE,
    IDENTIFIER, 
    NUMBER,
    MINUS, 
    COMMA,
    LPAREN,
    RPAREN,
    ZERO_QUESTION,
    IF,
    THEN,
    ELSE,
    LET,
    EQUAL,
    IN,
    NEGATE,
    ADD,
    MUL,
    QUOTIENT,
    EQUAL_QUESTION,
    LESS_QUESTION,
    GREATER_QUESTION,
    CONS,
    CAR,
    CDR,
    NULL_QUESTION,
    EMPTYLIST,
    LIST,
    COND,
    IF_COND,
    END,
    LET_STAR,
    UNPACK,
    PROC,
    LETPROC,
    LETREC,
    NEWREF,
    SETREF,
    DEREF,
    BEGIN,
    SET,
    LETMUTABLE,
    SETDYNAMIC,
    DURING,
    PRINT,
    WHILE,
    VAR,
    NOT,
    DO,
    READ,
    INT,
    BOOL,
    DERIVE,
    SEMICOLON,
    OPTION,
    PRODUCT,
    COLON,
    FROM,
    TAKE,
    LBRACK,
    RBRACK,
    MODULE,
    INTERFACE,
    BODY,
    PAIROF,
    NEWPAIR,
    UNPAIR,
    UNDERSCORE,
    LISTOF,
    VOID,
    OPAQUE,
    TRANSPARENT,
    TYPE,
    MODULE_PROC,
    CLASS,
    EXTENDS,
    FIELD,
    METHOD,
    NEW,
    SEND,
    SUPER,
    SELF,
    IMPLEMENTS,
    CAST,
    INSTANCEOF,
    INTERFACEDERIVE,
}
